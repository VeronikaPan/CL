spring.datasource.url= jdbc:postgresql://localhost:5432/zamestnancidb
spring.datasource.username=postgres
spring.datasource.password=secret

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation= true
spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto= update

# Konfigurace Flyway
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration

# Konfigurace Kafka
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=myGroup
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

spring.kafka.topic-add.name=addEmployeeTopic
spring.kafka.topic-update.name=updateEmployeeTopic
spring.kafka.topic-delete.name=deleteEmployeeTopic

spring.kafka.topic-add-response.name=addEmployeeResponseTopic
spring.kafka.topic-update-response.name=updateEmployeeResponseTopic
spring.kafka.topic-delete-response.name=deleteEmployeeResponseTopic

logging.level.org.apache.kafka.clients.NetworkClient=ERROR


